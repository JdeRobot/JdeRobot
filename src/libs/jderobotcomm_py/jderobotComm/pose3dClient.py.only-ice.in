import sys
import Ice
from .ice.pose3dIceClient import Pose3dIceClient


def __getPoseIceClient(ic, prefix):
    '''
    Returns a Pose3D Ice Client. This function should never be used. Use getPose3dClient instead of this

    @param ic: Ice Communicator
    @param prefix: prefix name of client in config file

    @type ic: Ice Communicator
    @type prefix: String

    @return Pose3D Ice Client

    '''
    print("Receiving " + prefix + " from ICE interfaces")
    client = Pose3dIceClient(ic, prefix)
    client.start()
    return client

def __getListenerPose(ic, prefix):
    '''
    Returns a Pose3D ROS Subscriber. This function should never be used. Use getPose3dClient instead of this

    @param ic: Ice Communicator
    @param prefix: prefix name of client in config file

    @type ic: Ice Communicator
    @type prefix: String

    @return Pose3D ROS Subscriber

    '''
    print(prefix + ": ROS msg are diabled")
    return None


def __Posedisabled(ic, prefix):
    '''
    Prints a warning that the client is disabled. This function should never be used. Use getPose3dClient instead of this

    @param ic: Ice Communicator
    @param prefix: prefix name of client in config file

    @type ic: Ice Communicator
    @type prefix: String

    @return None

    '''
    print(prefix + " Disabled")
    return None

def getPose3dClient (ic, prefix, node=None):
    '''
    Returns a Pose3D Client.

    @param ic: Ice Communicator
    @param prefix: prefix name of client in config file
    @param node: ROS node

    @type ic: Ice Communicator
    @type prefix: String
    @type node: ROS node

    @return None if pose3d is disabled

    '''
    prop = prop = ic.getProperties()
    server = prop.getPropertyAsIntWithDefault(prefix+".Server",0)

    cons = [__Posedisabled, __getPoseIceClient, __getListenerPose]

    return cons[server](ic, prefix)
// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `body.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

#ifndef __jderobot__home_fran_fqez_build_src_interfaces_cpp_jderobot_body_h__
#define __jderobot__home_fran_fqez_build_src_interfaces_cpp_jderobot_body_h__

#include <IceUtil/PushDisableWarnings.h>
#include <Ice/ProxyF.h>
#include <Ice/ObjectF.h>
#include <Ice/Exception.h>
#include <Ice/LocalObject.h>
#include <Ice/StreamHelpers.h>
#include <Ice/FactoryTableInit.h>
#include <IceUtil/ScopedArray.h>
#include <IceUtil/Optional.h>
#include <Ice/StreamF.h>
#include <jderobot/common.h>
#include <IceUtil/UndefSysMacros.h>

#ifndef ICE_IGNORE_VERSION
#   if ICE_INT_VERSION / 100 != 306
#       error Ice version mismatch!
#   endif
#   if ICE_INT_VERSION % 100 > 50
#       error Beta header file detected
#   endif
#   if ICE_INT_VERSION % 100 < 3
#       error Ice patch level mismatch!
#   endif
#endif

namespace jderobot
{

enum BodySide
{
    Left,
    Right
};

enum CameraBody
{
    Top,
    Bottom
};

enum MotorsName
{
    HipYawPitch,
    HipPitch,
    HipRoll,
    KneePitch,
    AnklePitch,
    AnkleRoll,
    ShoulderPitch,
    ShoulderRoll,
    ElbowYaw,
    ElbowRoll
};

struct BodyMotor
{
    ::Ice::Float pitch;
    ::Ice::Float yaw;
    ::Ice::Float roll;
};

}

namespace Ice
{
template<>
struct StreamableTraits< ::jderobot::BodySide>
{
    static const StreamHelperCategory helper = StreamHelperCategoryEnum;
    static const int minValue = 0;
    static const int maxValue = 1;
    static const int minWireSize = 1;
    static const bool fixedLength = false;
};

template<>
struct StreamableTraits< ::jderobot::CameraBody>
{
    static const StreamHelperCategory helper = StreamHelperCategoryEnum;
    static const int minValue = 0;
    static const int maxValue = 1;
    static const int minWireSize = 1;
    static const bool fixedLength = false;
};

template<>
struct StreamableTraits< ::jderobot::MotorsName>
{
    static const StreamHelperCategory helper = StreamHelperCategoryEnum;
    static const int minValue = 0;
    static const int maxValue = 9;
    static const int minWireSize = 1;
    static const bool fixedLength = false;
};

template<>
struct StreamableTraits< ::jderobot::BodyMotor>
{
    static const StreamHelperCategory helper = StreamHelperCategoryStruct;
    static const int minWireSize = 12;
    static const bool fixedLength = true;
};

template<class S>
struct StreamWriter< ::jderobot::BodyMotor, S>
{
    static void write(S* __os, const ::jderobot::BodyMotor& v)
    {
        __os->write(v.pitch);
        __os->write(v.yaw);
        __os->write(v.roll);
    }
};

template<class S>
struct StreamReader< ::jderobot::BodyMotor, S>
{
    static void read(S* __is, ::jderobot::BodyMotor& v)
    {
        __is->read(v.pitch);
        __is->read(v.yaw);
        __is->read(v.roll);
    }
};

}

#include <IceUtil/PopDisableWarnings.h>
#endif
